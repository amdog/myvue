{"id":"index.html","dependencies":[],"generated":{"html":"<!DOCTYPE html>\r\n<html lang=\"cn\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>bus,bus</title>\r\n    <script>function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction Bus(options) {\n  this._init(options);\n\n  return;\n}\n\nBus.prototype._init = function (ops) {\n  this.$options = ops;\n  initstate(this);\n};\n\nfunction initstate(vm) {\n  var opts = vm.$options;\n\n  if (opts.data) {\n    initdata(vm);\n  }\n\n  if (opts.computed) {\n    initcomputed();\n  }\n\n  if (opts.watch) {\n    initwatch();\n  }\n}\n\nfunction initdata(vm) {\n  var data = vm.$options.data;\n\n  if (typeof data == 'function') {\n    //data里面的this指向vm实例 this.xxx=xx\n    vm._data = data.call(vm);\n  } else {\n    vm._data = data || {};\n  }\n\n  for (var k in vm._data) {\n    proxy(vm, '_data', k);\n  }\n\n  observe(vm._data);\n}\n\nfunction proxy(vm, source, k) {\n  Object.defineProperty(vm, k, {\n    set: function set(newv) {\n      return vm[source][k] = newv;\n    },\n    get: function get() {\n      return vm[source][k];\n    }\n  });\n}\n\nfunction observe(data) {\n  if (_typeof(data) == 'object') {\n    observer(data);\n  } else {\n    return;\n  }\n}\n\nfunction observer(data) {\n  var keys = Object.keys(data);\n\n  if (Array.isArray(data)) {\n    data.__proto__ = arrayMethods;\n    observearray(data);\n  }\n\n  keys.forEach(function (v) {\n    reactive(data, v, data[v]);\n  });\n}\n\nfunction reactive(d, k, v) {\n  observe(v); //Object.defineProperty(倾听的数据，倾听的键，配置{get,set})\n\n  Object.defineProperty(d, k, {\n    get: function get() {\n      return v;\n    },\n    set: function set(newv) {\n      if (newv === v) {\n        return;\n      }\n\n      observe(newv);\n      return v = newv;\n    }\n  });\n}\n\nfunction initwatch() {}\n\nfunction initcomputed() {}\n\nfunction observearray(args) {\n  args.forEach(function (v) {\n    observe(v);\n  });\n} //数组拦截\n\n\nvar oldMethods = Array.prototype;\nvar arrayMethods = Object.create(oldMethods);\nvar methods = ['pop', 'push', 'shift', 'unshift', 'sort', 'splice', 'reverse'];\nmethods.forEach(function (method) {\n  arrayMethods[method] = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (args.length > 0) {\n      observearray(args);\n    }\n\n    return oldMethods[method].apply(this, args);\n  };\n});\nvar app = new Bus({\n  ele: '#app',\n  data: function data() {\n    return {\n      info: {\n        name: '',\n        age: 0,\n        pet: ['dog', 'cat', 'tager']\n      }\n    };\n  },\n  watch: {},\n  computed: {}\n});\napp._data.info.name = '--';\nconsole.log(app);</script>\r\n</head>\r\n<body>\r\n    <div id=\"app\"></div>\r\n</body>\r\n</html>"},"sourceMaps":null,"error":null,"hash":"555215e1916d551dfd94a3436b34c471","cacheData":{"env":{}}}